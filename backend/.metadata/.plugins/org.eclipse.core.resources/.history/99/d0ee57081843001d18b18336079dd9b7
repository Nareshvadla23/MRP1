package com.member.billclaim.controller;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.time.LocalDate;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.member.billclaim.advice.BillAlreadyClaimmedException;
import com.member.billclaim.advice.MemberNotFoundException;
import com.member.billclaim.dto.BillClaimDto;
import com.member.billclaim.dto.MemberDto;
import com.member.billclaim.entity.BillClaim;
import com.member.billclaim.entity.Member;
import com.member.billclaim.service.BillClaimService;
import com.member.billclaim.util.FeignService;

@ExtendWith(MockitoExtension.class)
class ClaimControllerTest {

	@Mock
	FeignService feign;

	@Mock
	BillClaimService claimService;

	@InjectMocks
	ClaimController controller;

	public static Member member() {
		Member member = new Member();
		member.setId(1L);
		member.setAddress("Hyderabad");
		member.setCity("Hyderabad");
		member.setContactNo(909900909L);
		member.setDob(LocalDate.now());
		member.setEmailAdress("naresh@gmail.com");
		member.setName("naresh");
		member.setPan("ASLSLDDK3A");
		member.setState("telangana");
		member.setMemberId("R-123");
		return member;
	}

	public static MemberDto memberDto() {
		MemberDto memberDto = new MemberDto();
		Member member = member();
		memberDto.setMember(member);
		memberDto.setResponse("claimed");
		return memberDto;
	}

	public static BillClaim billClaim() {
		BillClaim billClaim = new BillClaim();
		billClaim.setBillAmount(2000L);
		billClaim.setDateofAdmission(LocalDate.now());
		billClaim.setDateofDischarge(LocalDate.now());
		billClaim.setDob(LocalDate.now());
		billClaim.setId(1);
		billClaim.setName("naresh");
		billClaim.setProviderName("sai");
		return billClaim;
	}
	
	public static BillClaimDto billClaimDto() {
		BillClaimDto billClaimDto = new BillClaimDto();
		billClaimDto.setBillAmount(2000L);
		billClaimDto.setDateofAdmission(LocalDate.now());
		billClaimDto.setDateofDischarge(LocalDate.now());
		billClaimDto.setDob(LocalDate.now());
		billClaimDto.setId(1);
		billClaimDto.setName("naresh");
		billClaimDto.setProviderName("sai");
		return billClaimDto;
	}
 
	@Test
	void testGetMemberByName() throws MemberNotFoundException {
		Member memberDto = member();
		when(feign.getMemberByName("naresh")).thenReturn(memberDto);
		ResponseEntity<Member> responseMember = controller.getMemberByName("naresh");
		assertEquals(HttpStatus.OK, responseMember.getStatusCode());
	}

	@Test
	void testBillClaim() throws MemberNotFoundException, BillAlreadyClaimmedException {
		BillClaim billClaim = billClaim();
		BillClaimDto billClaimDto = billClaimDto();
		when(claimService.submitClaim(billClaimDto)).thenReturn(billClaim);
		ResponseEntity<String> response = controller.billClaim(billClaimDto);
		assertEquals(HttpStatus.OK, response.getStatusCode());

	}

}
